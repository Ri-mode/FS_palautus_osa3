{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","filterName","handleFilterChange","value","onChange","Persons","persons","deletePerson","filter","person","name","toLowerCase","includes","map","number","onClick","id","PersonForm","addNumber","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","setPersons","setNewName","setNewNumber","setFilterName","errorMessage","setErrorMessage","useEffect","personService","initialPersons","event","console","log","target","preventDefault","alreadyName","i","length","window","confirm","changeNumber","find","numberChanged","updatedPersons","setTimeout","returnedNumber","concat","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d30cb3d.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Filter = ({ filterName, handleFilterChange }) => {\n  return (\n    <div>\n      filter shown with: <input\n        value={filterName}\n        onChange={handleFilterChange}\n      />\n    </div>\n  )\n}\n\nexport default Filter","import React from \"react\"\n\nconst Persons = ({ persons, filterName, deletePerson }) => {\n  \n  return (\n    <div>\n      {persons\n        .filter(person => person.name.toLowerCase().includes(filterName.toLowerCase()))\n        .map(person =>\n          <div key={person.id}>\n           {person.name} {person.number} <button onClick = {() => deletePerson(person.id)}>delete</button>\n        </div>\n        )\n      }\n    </div>\n  )\n}\n\nexport default Persons","import React from \"react\"\n\nconst PersonForm = ({ addNumber, newName, handleNameChange, newNumber, handleNumberChange }) => {\n  return (\n    <form onSubmit={addNumber}>\n      <div>\n        name: <input \n          value={newName}\n          onChange={handleNameChange}\n        />\n      </div>\n      <div>\n      number: <input\n        value={newNumber}\n        onChange={handleNumberChange}\n        />\n      </div>  \n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","const Notification = ({ message }) => {\n  if (message === null) return null\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n  \nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport Filter from \"./components/Filter\"\nimport Persons from \"./components/Persons\"\nimport PersonForm from \"./components/PersonForm\"\nimport Notification from \"./components/Notification\"\nimport personService from './services/persons'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterName, setFilterName ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  const hook = () => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }\n\n  useEffect(hook, [])\n\n  const addNumber = (event) => {\n    event.preventDefault()\n    let alreadyName = false\n    for (let i = 0; i < persons.length; i++) {\n      if (persons[i].name === newName) {\n        alreadyName = true\n        break\n      }\n    }\n    if (alreadyName) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        console.log('Vaihda numero', newName)\n        const changeNumber = persons.find(person => person.name === newName)\n        const numberChanged = { ...changeNumber, number: newNumber }\n\n        personService\n          .update(numberChanged.id, numberChanged)\n          .then(() => personService\n            .getAll()\n            .then(updatedPersons => {\n              setPersons(updatedPersons)\n            })\n          )\n          .then(() => {\n            setErrorMessage(`Updated ${newName}`)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 2500)\n          })\n      }\n      //window.alert(`${newName} is already added to phonebook`)\n    } else {\n      const numberObject = {\n        name: newName,\n        number: newNumber,\n      }\n      personService\n        .create(numberObject)\n        .then(returnedNumber => {\n          console.log('returned', returnedNumber)\n          setPersons(persons.concat(returnedNumber))\n        })\n        .then(() => {\n          setErrorMessage(`Added ${newName}`          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 2500)\n        })\n      \n      console.log('Number added', event.target)\n    }  \n    setNewName('')\n    setNewNumber('')\n  }\n\n  const deletePerson = (id) => {\n    const personToDelete = persons.find(person => person.id === id)\n    console.log('toDelete', personToDelete.id)\n\n    if(window.confirm(`Delete ${personToDelete.name}?`)) {\n      personService\n        .remove(personToDelete.id)\n        .then(() => setPersons(persons.filter(person => person.id !== personToDelete.id)))\n        .then(() => {\n          setErrorMessage(`Removed ${personToDelete.name}`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 2500)\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    console.log('Nimi', event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log('Numero', event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    console.log('Filter', event.target.value)\n    setFilterName(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <Filter \n        filterName={filterName}\n        handleFilterChange={handleFilterChange}\n      />\n      \n      <h3>Add a new number</h3>\n      <PersonForm\n        addNumber={addNumber} \n        newName = {newName}\n        handleNameChange = {handleNameChange}\n        newNumber = {newNumber}\n        handleNumberChange = {handleNumberChange}\n      />\n      \n      <h3>Numbers</h3>\n\n      <Persons persons={persons} filterName={filterName} deletePerson={deletePerson} />\n      \n      {/*<div>debug: {newName}</div> */}\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}